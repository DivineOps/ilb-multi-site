{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage account for VM diagnostics"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "VM Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "VM Admin password"
      }
    },
    "dnsNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "DNS name prefix for Load Balancer IP"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "webServer-",
      "metadata": {
        "description": "Prefix to use for VM names"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "lbName": {
      "type": "string",
      "defaultValue": "iLB",
      "metadata": {
        "description": "Load Balancer name"
      }
    },
    "nicNamePrefix": {
      "type": "string",
      "defaultValue": "webServerNic-",
      "metadata": {
        "description": "Network Interface name prefix"
      }
    },
    "publicIPAddressPrefix": {
      "type": "string",
      "defaultValue": "ilbIP-",
      "metadata": {
        "description": "Public IP Name"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "ilbVnet",
      "metadata": {
        "description": "VNET name"
      }
    },
	"addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "VNET address prefix"
      }
    },
	"subnetName": {
      "type": "string",
      "defaultValue": "webSubnet",
      "metadata": {
        "description": "Subnet name"
      }
    },
	"subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet address prefix"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "Size of the VM"
      }
    },
	"availabilitySetName": {
      "type": "string",
      "defaultValue": "iLbAvSet",
      "metadata": {
        "description": "Availability set name"
      }
    },
	"networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "webSubnetNsg",
      "metadata": {
        "description": "Network security group name"
      }
    },
	"dscUrl": {
      "type": "string",
      "defaultValue": "https%3A%2F%2Fraw.githubusercontent.com%2FDivineOps%2Filb-multi-site%2Fmaster%2Fazuredeploy.json%2FwebServerMultiSiteDSC.zip",
      "metadata": {
        "description": "URL to the DSC module ZIP"
      }
    },
	"hackathonDSCUpdateTagVersion": {
		"type": "string",
		"defaultValue": "1.0",
		"metadata": {
			"description": "This value must be changed from a previous deployment to ensure the extension will run"
		}
	}
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "publicIPAddressType": "Dynamic",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters ('subnetName'))]",
    "numberOfInstances": 2,
	"numberOfIps": 2,
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",
    "frontEndIPConfigID0": "[concat(variables('lbID'),'/frontendIPConfigurations/ilbFrontEnd0')]",
	"frontEndIPConfigID1": "[concat(variables('lbID'),'/frontendIPConfigurations/ilbFrontEnd1')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
    "lbProbeID0": "[concat(variables('lbID'),'/probes/tcpProbe0')]",
	"lbProbeID1": "[concat(variables('lbID'),'/probes/tcpProbe1')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": "2",
        "platformUpdateDomainCount": "2",
        "managed": "true"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('publicIPAddressPrefix'), copyindex())]",
	  "copy": {
        "name": "publicIpLoop",
        "count": "[variables('numberOfIps')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsNamePrefix'), copyindex())]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicNamePrefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/RDP-VM', copyindex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[parameters('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressPrefix'), '0')]",
		"[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressPrefix'), '1')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "ilbFrontEnd0",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('publicIPAddressPrefix'), '0'))]"
              }
            }
          },
		  {
			"name": "ilbFrontEnd1",
			"properties": {
				"publicIPAddress": {
					"id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('publicIPAddressPrefix'), '1'))]"
				}
			}
		  }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "inboundNatRules": [
          {
            "name": "RDP-VM0",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID0')]"
              },
              "protocol": "tcp",
              "frontendPort": 50001,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          },
          {
            "name": "RDP-VM1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID0')]"
              },
              "protocol": "tcp",
              "frontendPort": 50002,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule80",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID0')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID0')]"
              }
            }
          },
		  {
			"name": "LbRule81",
			"properties": {
				"frontendIPConfiguration": {
					"id": "[variables('frontEndIPConfigID1')]"
				},
				"frontendPort": 80,
				"backendPort": 81,
				"enableFloatingIP": false,
				"idleTimeoutInMinutes": 5,
				"backendAddressPool": {
					"id": "[variables('lbPoolID')]"
				},
				"probe": {
					"id": "[variables('lbProbeID1')]"
				}
			}
		  }
        ],
        "probes": [
          {
            "name": "tcpProbe0",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
		  {
			"name": "tcpProbe1",
			"properties": {
				"protocol": "tcp",
				"port": 81,
				"intervalInSeconds": 5,
				"numberOfProbes": 2
			}
		  }
        ]
      }
    },
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('nicNamePrefix'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'),copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      },
	  "resources": [
			{
				"name": "Microsoft.Powershell.DSC",
				"type": "extensions",
				"location": "[resourceGroup().location]",
				"apiVersion": "2015-06-15",
				"dependsOn": [
					"[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'), copyindex())]"
				],
				"tags": {
					"displayName": "DSC"
				},
				"properties": {
					"publisher": "Microsoft.Powershell",
					"type": "DSC",
					"typeHandlerVersion": "2.9",
					"autoUpgradeMinorVersion": true,
					"forceUpdateTag": "[parameters('DSCUpdateTagVersion')]",
					"settings": {
						"configuration": {
							"url": "[parameters('dscUrl')]",
							"script": "webServerMultiSiteDSC.ps1",
							"function": "Main"
						},
						"configurationArguments": {
							"nodeName": "[concat(parameters('vmNamePrefix'), copyindex())]"
						}
					},
					"protectedSettings": {
						"configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
					}
				}
			}
		]
    },
	{
		"type": "Microsoft.Network/networkSecurityGroups",
		"name": "[parameters('networkSecurityGroupName')]",
		"apiVersion": "2016-03-30",
		"location": "[resourceGroup().location]",
		"properties": {
			"securityRules": [
				{
					"name": "Tcp80-81",
					"properties": {
						"protocol": "TCP",
						"sourcePortRange": "*",
						"destinationPortRange": "80-81",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 100,
						"direction": "Inbound"
					}
				},
				{
					"name": "RDP",
					"properties": {
						"protocol": "TCP",
						"sourcePortRange": "*",
						"destinationPortRange": "3389",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 2000,
						"direction": "Inbound"
					}
				}
			]
		},
		"dependsOn": []
	},
]
}
